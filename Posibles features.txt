#Posibles features

###Errores de ENTRADA y SALIDA y PERFIL
* Leer los parametros formales en modulos 							//
	* en acciones													//
	* en funciones													//
* Escribir los resultados en un módulo								//
	* en acciones													//
	* en funciones													//
* Escribir en una funcion											//
	
###Pasaje de parámetros
* Uso de variables globales 										//
* Asignar a una variable con tipo de pasaje de parametro por copia
	* En acciones													//
* Procedimiento sin ningún parámetro con tipo referencia VAR		//
* funciones con parametros de tipo referencia VAR					//
* 


###Gherkin cheatsheet
In Gherkin, each line that isn't blank has to start with a Gherkin keyword, followed by any text you like. The main keywords are:

Feature 								- nombre y una descripción de lo que se quiere que se haga
Scenario								- Un ejemplo particular en el que se daría tal feature
Given, When, Then, And, But (Steps)		- Given: el estado inicial del escenario
										- When: describe un evento o accion 
										- Then: la salida (a usuario) 
Background								- Cosas que se repitan para los escenarios (evitar escribir mismas cosas en los given)
Scenario Outline						- Abstraer algunos datos, son necesarios ejemplos para ilustrar
Examples								- Despues de los Scenario Outline, son contenedores para tablas

#DUDAS
* Escenarios gherkin para los los tipos de errores que se resolverían con los test tipo PEX? 
ya que cada ejercicio tiene test particulares para su caso. y habría que abstraerse en gherkin
	Serían Given salidas X y salidas esperadas Y AND X<>Y THEN mensajeX?
	o Given problema de __tal__tipo__con__tales__salidas__esperadas__ AND salidas X y esperadas Y AND X<>Y THEN mensajeX?

* Alguna forma ideal para abstraer los perfiles?
EJ:

* Checkeos ad hoc?

* Conversor de Oxygene a C#?